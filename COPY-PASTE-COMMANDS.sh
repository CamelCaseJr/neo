#!/bin/bash
# ๐ COPIE E COLE ESTES COMANDOS NO WSL

# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
# PASSO 1: Navegar para o diretรณrio do projeto
# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
cd /mnt/c/Users/junior/Documents/fiap/neo

# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
# PASSO 2: Tornar scripts executรกveis e executar migraรงรฃo
# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
chmod +x migrate-to-multimodule.sh
chmod +x run-migration.sh

# Execute o script de migraรงรฃo
./migrate-to-multimodule.sh

# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
# PASSO 3: Compilar todos os mรณdulos
# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
mvn clean install

# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
# PASSO 4: Executar neo-core (TERMINAL 1)
# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
# Abra um NOVO terminal WSL e execute:
cd /mnt/c/Users/junior/Documents/fiap/neo/neo-core
./mvnw quarkus:dev

# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
# PASSO 5: Executar modelo-ia (TERMINAL 2)
# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
# Abra outro NOVO terminal WSL e execute:
cd /mnt/c/Users/junior/Documents/fiap/neo/modelo-ia
../mvnw quarkus:dev -f pom.xml

# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
# PASSO 6: Testar Endpoints (TERMINAL 3)
# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
# Abra um terceiro terminal para testes:

# Testar neo-core
curl http://localhost:8080/hello
curl http://localhost:8080/api/neos

# Testar modelo-ia
curl http://localhost:8081/api/ia/health
curl http://localhost:8081/api/ia/info

# Testar previsรฃo de perigosidade
curl "http://localhost:8081/api/ia/previsao/perigosidade?magnitude=19.5&diametro=250&velocidade=18.5"

# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
# URLs PARA ABRIR NO NAVEGADOR
# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
# neo-core Swagger:    http://localhost:8080/q/swagger-ui
# modelo-ia Swagger:   http://localhost:8081/q/swagger-ui
# neo-core Health:     http://localhost:8080/q/health
# modelo-ia Health:    http://localhost:8081/api/ia/health

# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
# COMMIT COM GIT FLOW (Apรณs validaรงรฃo)
# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
git flow feature start multimodule-structure
git add .
git commit -m "refactor: migrar para estrutura multi-mรณdulo

- Criar mรณdulo neo-core com funcionalidades existentes
- Criar mรณdulo modelo-ia para anรกlise com IA
- Configurar POM pai para gerenciar dependรชncias
- Adicionar serviรงo de previsรฃo de perigosidade
- Documentar arquitetura e processo de migraรงรฃo"
git flow feature finish multimodule-structure
git push origin develop

# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
# โ PRONTO! Sua aplicaรงรฃo estรก rodando em arquitetura multi-mรณdulo
# โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
